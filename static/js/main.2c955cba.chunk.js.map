{"version":3,"sources":["components/Navbar/index.js","components/Header/index.js","booksAPI/index.js","localstorage/localstorage.js","components/Card/BooksCard.js","components/Toast/index.js","components/BookList/BookItem.js","components/BookList/BookList.js","components/Spinner/index.js","pages/SearchBook/index.js","components/Collections/index.js","booksAPI/CoverImg.js","components/Collections/CollectionsItems.js","components/Collections/CollectionsGridItems.js","pages/Collections/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Header","getApiSearchUrl","searchTerm","getBookCoverByOLID","olid","searchBooks","fetch","then","r","json","setItem","key","data","localStorage","JSON","stringify","getItem","parse","BooksCard","title","img","year","dataHook","bookKey","addBookToCollection","collections","collectionSelected","useState","addToCollection","setAddToCollection","style","backgroundImage","onChange","e","value","map","collection","index","name","id","onClick","toast","configure","AddToast","toastType","toastMessage","toastPosition","options","autoClose","position","pauseOnHover","draggable","successMessage","success","errorMessage","error","BookItem","book","books","cover_edition_key","setCollectionSelected","length","first_publish_year","selectedValue","target","collectionToAdd","find","c","bookToAdd","b","some","push","alert","BookList","setCollections","useEffect","collectionStorage","setCollectionsFormStorage","Spinner","color","loading","size","speedMultiplier","SearchBook","serachInputValue","setSerachInputValue","bookList","setBookList","isLoading","setIsLoading","click","a","preventDefault","getBooks","searchValue","res","docs","type","AddCollections","collectionInput","setCollectionInput","placeholder","isCollectionExist","uuidv4","addCollection","CoverImg","src","width","height","alt","CollectionsItems","editedCollection","setEditedCollection","showCollectionData","setShowCollectionData","isEditMode","setIsEditMode","ischangeMode","setIsChangeMode","setBookKey","moveBooksFromCollection","cuurentBookToMove","filter","updateCollection","newCollections","handleOnChange","cursor","fontWeight","collectionsAfterFilter","deleteCollection","coll","idx","newEditedCollection","deleteBookFromCollection","CollectionsGridItems","Collections","collectionFromStorge","displayCollections","setDisplayCollections","isListMode","App","exact","path","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.2c955cba.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './navbar.css'\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar-container\">\r\n            <ul className=\"ul-list\">\r\n                <li><Link className=\"nav-link\" to=\"/search-books\">Search Book</Link></li>\r\n                <li>\r\n                    <Link className=\"nav-link\" to=\"/collections\">Collections</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navbar } from '../Navbar'\r\nexport const Header = () => {\r\n    return (\r\n        <header>\r\n            <Navbar />\r\n        </header>\r\n    )\r\n}\r\n","const getApiSearchUrl = (searchTerm) =>\r\n  `https://openlibrary.org/search.json?q=${searchTerm}`;\r\n\r\nexport const getBookCoverByOLID = (olid) =>\r\nolid ?\r\n  `https://covers.openlibrary.org/b/olid/${olid}-M.jpg` : \r\n  \"https://cdn.pixabay.com/photo/2016/10/14/16/39/book-1740515_960_720.png\";\r\n\r\nexport const searchBooks = (searchTerm = \"\") => {\r\n  return fetch(getApiSearchUrl(searchTerm)).then((r) => r.json());\r\n};\r\n\r\n\r\n","export const setItem = (key, data) => {\r\n    return localStorage.setItem(key, JSON.stringify(data)) || [];\r\n }\r\n \r\n export const getItem = (key) => {\r\n     return JSON.parse(localStorage.getItem(key)) || [];\r\n }\r\n \r\n export const removeItem = (key) => {\r\n     return localStorage.removeItem(key);\r\n }","import React, { useState } from 'react'\r\nimport { FaPlusSquare } from 'react-icons/fa';\r\nimport './card.css'\r\nexport const BooksCard = ({ title, img, year, dataHook, bookKey, addBookToCollection, collections, collectionSelected }) => {\r\n    const [addToCollection, setAddToCollection] = useState(false)\r\n\r\n    return (\r\n        <div style={{ backgroundImage: `url(${img})` }} className=\"book-card-container\" data-hook={dataHook}>\r\n            <div className=\"book-card-content\">\r\n                <h3 className=\"book-card-title\">{title}</h3>\r\n                <h4 className=\"book-card-year\">{year}</h4>\r\n\r\n                {!addToCollection ?\r\n                    (<FaPlusSquare className=\"add-collection-icon\" title=\"add\" onClick={() => setAddToCollection(!addToCollection)} />)\r\n                    :\r\n                    (<select\r\n                        className=\"books-card-select\"\r\n                        onChange={(e) => addBookToCollection(e, bookKey)}\r\n                        title=\"select collection\"\r\n                        data-hook={`select-${dataHook}`}\r\n                        value={collectionSelected}\r\n                    >\r\n                        <option value={'select collection'}>select collection</option>\r\n                        {collections.map((collection, index) => (<option\r\n                            data-hook={`option-${index}-${dataHook}`}\r\n                            key={collection.id}\r\n                            value={collection.name}\r\n                        >{collection.name}</option>))\r\n\r\n                        }\r\n                    </select>\r\n                    )}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\nexport const AddToast = (toastType, toastMessage, toastPosition = 'top-right') => {\r\n    const options = {\r\n        autoClose: 3000,\r\n        position: toastPosition,\r\n        pauseOnHover: true,\r\n        draggable: true\r\n    };\r\n    const successMessage = () =>{\r\n        toast.success(`${toastMessage}`, options);\r\n    };\r\n    const errorMessage = () =>{\r\n        toast.error(`${toastMessage}`, options)\r\n    };\r\n    return (\r\n        <>\r\n            {toastType ? successMessage() : errorMessage()}\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { getBookCoverByOLID } from '../../booksAPI';\r\nimport { setItem } from '../../localstorage/localstorage';\r\nimport { BooksCard } from '../Card/BooksCard';\r\nimport { AddToast } from '../Toast';\r\nimport './books.css'\r\n\r\nexport const BookItem = ({ book, books, bookKey, dataHook, collections }) => {\r\n    const img = getBookCoverByOLID(book.cover_edition_key);\r\n    const [collectionSelected, setCollectionSelected] = useState('');\r\n\r\n    const addBookToCollection = (e, bookKey) => {\r\n        const selectedValue = e.target.value;\r\n        setCollectionSelected(selectedValue);\r\n        if (collections.length < 0)\r\n            return AddToast(false, 'Create Collection First ');\r\n\r\n        const collectionToAdd = collections.find((c) => c.name === selectedValue);\r\n\r\n        const bookToAdd = books.find((b) => b.key === bookKey);\r\n        if (!bookToAdd) return alert(false, 'Book Not Found :(');\r\n\r\n        const isBookAlreadyInCollection = collectionToAdd.books.some(\r\n            (b) => b.key === bookKey,\r\n        );\r\n\r\n        if (isBookAlreadyInCollection)\r\n            return AddToast(false, 'Book Already Exist In Collection ');\r\n\r\n        collectionToAdd.books.push(bookToAdd);\r\n        setItem('collections', collections);\r\n        AddToast(\r\n            true,\r\n            `the book added successfuly to ${collectionToAdd.name} collection`,\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"books-item-container\">\r\n            {books.length > 0 ? <BooksCard\r\n                title={book.title}\r\n                img={img} year={book.first_publish_year}\r\n                dataHook={dataHook}\r\n                bookKey={bookKey}\r\n                addBookToCollection={addBookToCollection}\r\n                collections={collections}\r\n                collectionSelected={collectionSelected}\r\n            /> :\r\n                null}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getItem } from '../../localstorage/localstorage';\r\nimport { BookItem } from './BookItem';\r\nimport './books.css'\r\nexport const BookList = ({ books = [] }) => {\r\n    const [collections, setCollections] = useState([]);\r\n\r\n    const setCollectionsFormStorage = () => {\r\n        const collectionStorage = getItem('collections');\r\n        if (collectionStorage?.length === 0) return;\r\n        else setCollections(collectionStorage);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCollectionsFormStorage();\r\n    }, []);\r\n\r\n    return (\r\n        <div data-hook=\"all-books\" className=\"book-list-container\">\r\n                {\r\n                    books?.length > 0 ?\r\n                        books.map((book, index) => (\r\n                                <BookItem\r\n                                key={index}\r\n                                dataHook={`book-${index}`}\r\n                                book={book}\r\n                                books={books}\r\n                                bookKey={book.key}\r\n                                collections={collections}\r\n                                setCollections={setCollections}\r\n                            />\r\n                        ))\r\n                        :\r\n                        null\r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport RiseLoader from \"react-spinners/RiseLoader\";\r\n\r\nexport const Spinner = ({color,loading,}) => {\r\n    return (\r\n        <RiseLoader color={color} loading={loading} size={20} speedMultiplier=\"0.5\" />\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './searchBook.css';\r\nimport { GrSearch } from 'react-icons/gr';\r\nimport { searchBooks } from '../../booksAPI/index'\r\nimport { BookList } from '../../components/BookList/BookList';\r\nimport { Spinner } from '../../components/Spinner';\r\nexport const SearchBook = () => {\r\n    const [serachInputValue, setSerachInputValue] = useState('');\r\n    const [bookList, setBookList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onChange = (e) => {\r\n        setSerachInputValue(e.target.value);\r\n    };\r\n    const click = async (e) => {\r\n        e.preventDefault()\r\n        setIsLoading(true)\r\n        await getBooks(serachInputValue);\r\n    }\r\n\r\n    const getBooks = async (searchValue) => {\r\n        const res = await searchBooks(searchValue);\r\n        if (res?.docs?.length > 0) {\r\n            const books = res.docs;\r\n            setIsLoading(false);\r\n            setBookList(books);\r\n        } else {\r\n            setIsLoading(false);\r\n            setBookList([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <section>\r\n\r\n            <div className=\"search-contaitner\">\r\n                <div className=\"search-input-contaitner\">\r\n                    <input type=\"text\" className=\"search-input\" onChange={onChange} />\r\n                    <GrSearch className=\"search-icon\" onClick={click} />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {\r\n                !isLoading ? (\r\n\r\n                    <BookList books={bookList} />\r\n\r\n                ) : (<div className=\"serach-book-loading\"><Spinner color=\"red\"/></div>)\r\n            }\r\n        </section>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport './collection.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { GrFormAdd } from 'react-icons/gr';\r\nexport const AddCollections = ({ setCollections, collections }) => {\r\n    const [collectionInput, setCollectionInput] = useState('');\r\n\r\n    const handleOnChange = (e) => {\r\n        setCollectionInput(e.target.value);\r\n    };\r\n\r\n    const addCollection = () => {\r\n        const isCollectionExist = collections.some(\r\n            (collection) => collection.name === collectionInput,\r\n        );\r\n        if (!collectionInput)\r\n            return alert(\"no value\")\r\n        if (isCollectionExist)\r\n            return alert(\"exist\")\r\n        const collection = {\r\n            id: uuidv4(),\r\n            name: collectionInput,\r\n            books: [],\r\n        };\r\n        setCollections([...collections, collection]);\r\n        setCollectionInput('');\r\n        return\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 style={{ \"textAlign\": \"center\" }}>Add collection</h1>\r\n            <div className=\"add-collection-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={collectionInput}\r\n                    placeholder=\"Add New Collection\"\r\n                    onChange={handleOnChange}\r\n                    data-hook=\"add-collection-input\"\r\n                />\r\n                <GrFormAdd\r\n                    className=\"add-icon\"\r\n                    onClick={() => addCollection()}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { getBookCoverByOLID } from \"./index\";\r\n\r\nexport const CoverImg = ({olid}) => {\r\n    return <img src={getBookCoverByOLID(olid)} width=\"50px\" height=\"50px\" alt='collection-list-img'/>;\r\n  }","import React, { useState } from 'react';\r\nimport { FaChevronDown, FaEdit, FaChevronUp, FaRegCheckSquare, FaExchangeAlt } from 'react-icons/fa';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport './collection.css';\r\nimport { AddToast } from '../Toast';\r\nimport { CoverImg } from '../../booksAPI/CoverImg';\r\nexport const CollectionsItems = ({ collections, collection, setCollections }) => {\r\n    const [editedCollection, setEditedCollection] = useState(collection);\r\n    const [showCollectionData, setShowCollectionData] = useState(false);\r\n    const [isEditMode, setIsEditMode] = useState(false);\r\n    const [ischangeMode, setIsChangeMode] = useState(false);\r\n    const [bookKey, setBookKey] = useState('')\r\n\r\n    const deleteCollection = (id) => {\r\n        const collectionsAfterFilter = collections.filter((c) => c.id !== id);\r\n        setCollections(collectionsAfterFilter);\r\n    };\r\n    const updateCollection = () => {\r\n        if (editedCollection.name === '')\r\n            return AddToast(false, 'The value is empty. You need to insert a collection name')\r\n\r\n        const isCollectionExist = collections.some(\r\n            (collection) => collection.name === editedCollection.name,\r\n        );\r\n\r\n        if (isCollectionExist)\r\n            return AddToast(false, 'This name already exists. Try to choose another name')\r\n\r\n        const newCollections = collections.map((c) =>\r\n            c.id === collection.id ? editedCollection : c,\r\n        );\r\n\r\n        setCollections(newCollections);\r\n        setIsEditMode(false);\r\n        AddToast(true, 'Collection is Updated');\r\n    };\r\n    const moveBooksFromCollection = (e, bookKey) => {\r\n        const selectedValue = e.target.value;\r\n\r\n        if (collections?.length < 0)\r\n            return AddToast(false, 'Create Collection First ');\r\n\r\n        const collectionToAdd = collections.find((c) => c.id === selectedValue);\r\n        const isBookAlreadyInCollection = collectionToAdd.books.some(\r\n            (b) => b.key === bookKey,\r\n        );\r\n        \r\n        if (isBookAlreadyInCollection)\r\n            return AddToast(false, 'Book Already Exist In Collection ');\r\n\r\n        const cuurentBookToMove = collection.books.find((b) => b.key === bookKey);\r\n        if (!cuurentBookToMove) return AddToast(false, 'Book Not Found :(');\r\n        \r\n        const books = collection.books.filter((b) => b.key !== bookKey);\r\n        collectionToAdd.books.push(cuurentBookToMove);\r\n        const updateCollection = {\r\n            ...editedCollection,\r\n            books,\r\n        };\r\n        const newCollections = collections.map((c) => {\r\n            if (c.id === collection.id) return updateCollection;\r\n            return c;\r\n        });\r\n        setEditedCollection(updateCollection)\r\n        setCollections(newCollections)\r\n        setIsChangeMode(!ischangeMode)\r\n    }\r\n    const handleOnChange = (e) => {\r\n        setEditedCollection({\r\n            ...editedCollection,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n    const deleteBookFromCollection = (bookKey) => {\r\n        const books = collection.books.filter((b) => b.key !== bookKey);\r\n        const newEditedCollection = {\r\n            ...editedCollection,\r\n            books,\r\n        };\r\n        const newCollections = collections.map((c) =>\r\n            c.id === collection.id ? newEditedCollection : c,\r\n        );\r\n        setEditedCollection(newEditedCollection);\r\n        setCollections(newCollections);\r\n    };\r\n\r\n    return (\r\n        <div className=\"collections-list-container\">\r\n            <div className=\"collection-item-container\">\r\n                {!isEditMode ? <span style={{ fontWeight: 'bold' }}>{collection.name}</span> :\r\n                    <div className=\"collection-item-edit\">\r\n                        <input\r\n                            name=\"name\"\r\n                            value={editedCollection.name}\r\n                            onChange={(e) => handleOnChange(e)}\r\n                            data-hook=\"edit-name-input\"\r\n                        />\r\n                        <FaRegCheckSquare style={{ cursor: \"pointer\" }} onClick={() => updateCollection()} />\r\n                    </div>\r\n                }\r\n                <div className=\"collection-item-icon\">\r\n                    <FaEdit\r\n                        style={{ cursor: \"pointer\" }}\r\n                        data-hook=\"edit-icon\"\r\n                        onClick={() => { setIsEditMode(!isEditMode) }}\r\n                    />\r\n                    <AiFillDelete\r\n                        style={{ cursor: \"pointer\" }}\r\n                        data-hook=\"delete-icon\"\r\n                        onClick={() => deleteCollection(collection.id)}\r\n                    />\r\n                    {!showCollectionData ?\r\n                        <FaChevronDown onClick={() => setShowCollectionData(!showCollectionData)} style={{ cursor: \"pointer\" }} />\r\n                        :\r\n                        <FaChevronUp onClick={() => setShowCollectionData(!showCollectionData)} style={{ cursor: \"pointer\" }} />\r\n                    }\r\n                </div>\r\n            </div>\r\n            {showCollectionData ?\r\n                <div>\r\n                    {collection.books.length === 0 ? (\r\n                        <div>No book Add</div>\r\n                    ) :\r\n                        !ischangeMode ?\r\n                            <>\r\n                                {collection.books?.map((book, index) => (\r\n                                    <div key={index} className=\"collection-book-data-container\">\r\n                                        <CoverImg olid={book.cover_edition_key} />\r\n                                        <option\r\n                                            onChange={moveBooksFromCollection}\r\n                                            className=\"collection-books-data\"\r\n                                            value={book.title}\r\n                                        >\r\n                                            {book.title}\r\n                                        </option>\r\n                                        <FaExchangeAlt\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            onClick={() => {\r\n                                                setIsChangeMode(!ischangeMode)\r\n                                                setBookKey(book.key)\r\n                                            }}\r\n                                        />\r\n                                        <AiFillDelete\r\n                                            style={{ cursor: \"pointer\" }}\r\n                                            data-hook=\"delete-icon\"\r\n                                            onClick={() => deleteBookFromCollection(book.key)}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </>\r\n                            :\r\n                            <select onChange={(e) => moveBooksFromCollection(e, bookKey)}  >\r\n                                <option value={'select collection'}>select collection</option>\r\n                                {collections.map((coll, idx) => (\r\n                                    <option key={idx} value={coll.id}>\r\n                                        {coll.name}\r\n                                    </option>\r\n\r\n                                ))}\r\n                            </select>\r\n                    }\r\n                </div> :\r\n\r\n                null}\r\n        </div>\r\n    )\r\n}\r\n// {!ischangeMode ?\r\n//     <select onChange={moveBooksFromCollection}>\r\n//             <option>\r\n//                 {book.title}\r\n//             </option>\r\n//         ))}\r\n//     </select>\r\n//     :\r\n//     <FaExchangeAlt\r\n//         style={{ cursor: \"pointer\" }}\r\n//         onClick={() => setIsChangeMode(!ischangeMode)}\r\n\r\n//     />\r\n// }","import React from 'react'\r\n\r\nexport const CollectionsGridItems = () => {\r\n    return (\r\n        <div>\r\n            Grid In Progress\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { AddCollections } from '../../components/Collections'\r\nimport { CollectionsItems } from '../../components/Collections/CollectionsItems';\r\nimport { getItem, setItem } from '../../localstorage/localstorage';\r\nimport { FaList } from 'react-icons/fa';\r\nimport { CgDisplayGrid } from 'react-icons/cg';\r\nimport '../../components/Collections/collection.css'\r\nimport { CollectionsGridItems } from '../../components/Collections/CollectionsGridItems';\r\nexport const Collections = () => {\r\n    const collectionFromStorge = getItem('collections');\r\n    const [displayCollections, setDisplayCollections] = useState(false);\r\n    const [collections, setCollections] = useState(collectionFromStorge);\r\n\r\n    useEffect(() => {\r\n        if (collectionFromStorge.length === 0) return;\r\n        setCollections(collectionFromStorge || []);\r\n        \r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setItem('collections', collections);\r\n    }, [collections]);\r\n\r\n    return (\r\n        <div className=\"f1-collection-container\">\r\n            <AddCollections\r\n                setCollections={setCollections}\r\n                collections={collections}\r\n            />\r\n            <div className=\"collections-display-data-container\">\r\n                <FaList onClick={() => setDisplayCollections(!displayCollections)} />\r\n                <CgDisplayGrid onClick={() => setDisplayCollections(!displayCollections)} id=\"collection-display-grid-icon\" />\r\n            </div>\r\n            {!displayCollections ?\r\n                <div>\r\n                    {collections.map((collection, index) => (\r\n                        <CollectionsItems\r\n                            key={index}\r\n                            collection={collection}\r\n                            collections={collections}\r\n                            setCollections={setCollections}\r\n                            isListMode={displayCollections}\r\n                        />\r\n                    ))}\r\n                </div> \r\n                :\r\n                <CollectionsGridItems />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { SearchBook } from './pages/SearchBook';\nimport {Collections} from './pages/Collections'\n\nfunction App() {\n  return (\n    <main className=\"App\">\n      <Header />\n      <Switch>\n      <Route\n          exact\n          path=\"/\"\n          render={(props) => (<SearchBook {...props} />)}\n        />\n        <Route\n          exact\n          path=\"/search-books\"\n          render={(props) => (<SearchBook {...props} />)}\n        />\n        <Route\n          exact\n          path=\"/collections\"\n          render={(props) => (<Collections data-hook=\"collections-link\" {...props} />)}\n        />\n        {/* <Route\n          exact\n          path=\"/collections\"\n          render={(props) => (<Collections data-hook=\"collections-link\" {...props} />)}\n        /> */}\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={'/books'}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}